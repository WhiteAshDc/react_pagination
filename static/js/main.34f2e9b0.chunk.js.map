{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","currentPage","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","className","cn","disabled","onClick","index","includes","href","map","number","active","length","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setItemsPerPage","idexOfLastItem","indexOfFirstItem","currentItems","slice","onChange","event","target","value","id","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAQ1C,IAHK,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAEMC,EAAwB,GAErBC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,GAAK,EAC9DD,EAAYI,KAAKH,GAenB,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUX,IAAgBI,EAAY,KAD1C,SAGE,mBACEQ,QAAS,kBAlBSC,EAkBcb,OAjBlCI,EAAYU,SAASD,EAAQ,IAC/BV,EAASU,EAAQ,IAFI,IAACA,GAmBlB,UAAQ,WACRJ,UAAU,YACVM,KAAK,QACL,gBAAc,OALhB,oBAWDX,EAAYY,KAAI,SAAAC,GAAM,OACrB,oBACER,UAAWC,IAAG,YAAa,CAAEQ,OAAQlB,IAAgBiB,IADvD,SAIE,mBACEL,QAAS,kBAAMT,EAASc,IACxB,UAAQ,WACRR,UAAU,YACVM,KAAI,WAAME,GAJZ,SAMGA,KAREA,MAaT,oBAAIR,UAAWC,IAAG,YAChB,CAAEC,SAAUX,IAAgBI,EAAYA,EAAYe,OAAS,KAD/D,SAGE,mBACEP,QAAS,kBA1CSC,EA0Ccb,OAzClCI,EAAYU,SAASD,EAAQ,IAC/BV,EAASU,EAAQ,IAFI,IAACA,GA2ClB,UAAQ,WACRJ,UAAU,YACVM,KAAK,QACL,gBAAc,QALhB,wBChEFK,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAO1B,EAAP,KAAqB4B,EAArB,KAEMC,EAAiB9B,EAAcC,EAC/B8B,EAAmBD,EAAiB7B,EAEpC+B,EAAeZ,EAAMa,MAAMF,EAAkBD,GAWnD,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,yBACYT,EADZ,mBACkC+B,EAAmB,EADrD,cAC4DD,EAD5D,QAIA,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEyB,SAhBiB,SAACC,GAC1BN,GAAiBM,EAAMC,OAAOC,OAC9BT,EAAe,IAeP,UAAQ,kBACRU,GAAG,kBACH7B,UAAU,eAJZ,UAME,wBAAQ4B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,aAAcA,EACdC,WAAYkB,EAAMD,OAClBhB,SAxCW,SAACqC,GAChBZ,EAAeY,IAwCXxC,YAAaA,IAGf,6BACGgC,EAAahB,KAAI,SAAAyB,GAAI,OACpB,6BAGGA,GAFIA,YE7DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.34f2e9b0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  paginate: (pageNumber: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  itemsPerPage,\n  totalItems,\n  paginate,\n}) => {\n  const pageNumbers: number[] = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const handlePrevButton = (index: number) => {\n    if (pageNumbers.includes(index - 1)) {\n      paginate(index - 1);\n    }\n  };\n\n  const handleNextButton = (index: number) => {\n    if (pageNumbers.includes(index + 1)) {\n      paginate(index + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item',\n        { disabled: currentPage === pageNumbers[0] })}\n      >\n        <a\n          onClick={() => handlePrevButton(currentPage)}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(number => (\n        <li\n          className={cn('page-item', { active: currentPage === number })}\n          key={number}\n        >\n          <a\n            onClick={() => paginate(number)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item',\n        { disabled: currentPage === pageNumbers[pageNumbers.length - 1] })}\n      >\n        <a\n          onClick={() => handleNextButton(currentPage)}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n\n  const idexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = idexOfLastItem - itemsPerPage;\n\n  const currentItems = items.slice(indexOfFirstItem, idexOfLastItem);\n\n  const paginate = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handeleSelectValue = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {` Page ${currentPage} (Items ${indexOfFirstItem + 1} - ${idexOfLastItem}) `}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            onChange={handeleSelectValue}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        itemsPerPage={itemsPerPage}\n        totalItems={items.length}\n        paginate={paginate}\n        currentPage={currentPage}\n\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}